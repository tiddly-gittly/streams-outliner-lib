title: $:/plugins/linonetwo/streams-outliner-lib/language/en-GB/Readme

\procedure lingo-base() $:/plugins/linonetwo/streams-outliner-lib/language/
\procedure wikitext-example-without-html(src)
<div class="doc-example">
	<$macrocall $name="copy-to-clipboard-above-right" src=<<src>>/>
	<$codeblock code=<<src>>/>
	<p>
		That renders as:
	</p>
	<$transclude $variable="src" $mode="block"/>
</div>
\end

! <<lingo Name>>

<<lingo Description>>

Read the interactive doc on [ext[https://tiddly-gittly.github.io/streams-outliner-lib/]].

!! Outliner Usage

Create an outliner that will add information to tiddler [[Index]]'s fields:

<<wikitext-example-without-html """<<stream-outliner Index>>""">>

Or use the transclude widget:

<<wikitext-example-without-html """<$transclude $variable="stream-outliner" currentTiddler="Index"/>""">>

!!! Navigation with breadcrumbs

Here we have switched to the `stream-outliner-breadcrumbs` macro, which comes with breadcrumb navigation (see Breadcrumb Navigation in Other Tools below). And we've added an `id` parameter so that we can create multiple outlines on the same page, which, as you may have noticed, can interact with each other and display the same content at the same time if you don't specify the `id` parameter.

<<wikitext-example-without-html """<<stream-outliner-breadcrumbs Index1 id:stream-outliner-1>>""">>

!!! The node is edited with a toolbar

<<wikitext-example-without-html """<<stream-outliner Index2 enableEditToolbar:yes id:stream-outliner-2>>""">>

!!! Maximum width of node

You can use any CSS value, like `80vw` `80%` `80px` `80em` `80rem` `80ch` `80ex` `80mm` `80cm` `80in` `80pt` `80pc`, just remember to include the unit.

<<wikitext-example-without-html """<<stream-outliner Index3 nodeMaxWidth:80% id:stream-outliner-3>>""">>

!!! Template wikified for node title

Wikitext that is wikified to generate the title for new nodes. 

The default is to concatenate the tiddler name with a slash to the random number, but you can customize how the title is concatenated.

<<wikitext-example-without-html """<<stream-outliner Index4 newNodeTitle:"<<stream-root-title>>-<<now [UTC]YYYY0MM0DD0hh0mm0ssXXX>>" id:stream-outliner-4>>""">>

!!! Tiddler to use as new node template

Tiddler to use as a template for new nodes. You need to fill in an existed tiddler's title here.

We use a tiddler [[$:/plugins/linonetwo/streams-outliner-lib/language/en-GB/Name]] as example here.

Note that it only takes effect on the second node (create a random node first, then press Enter to create the second node).

<<wikitext-example-without-html """<<stream-outliner Index4 newNodeTiddlerTemplate:"$:/plugins/linonetwo/streams-outliner-lib/language/en-GB/Name" id:stream-outliner-5>>""">>

!! Other Tools

!!! Breadcrumb Navigation

It's probably not useful to use it directly, it's generally used by adding it to a tiddler viewing template, such as the one below.

You can modify the `tags[XXX]` part to precisely match the tiddlers provided by your plugin. Keeping it precise here prevents your tiddler view template from having an effect on the tiddlers of other people's plugins, who may not want to show breadcrumb navigation.


```tid
tags: $:/tags/ViewTemplate
list-before: $:/core/ui/ViewTemplate/body
title: your-breadcrumbs-view-template

<%if [<currentTiddler>has[stream-type]tags[XXX]] %>
  <<stream-show-breadcrumbs>>
<%endif%>
```

Or show breadcrumb navigation only on outline node tiddlers in [[Index]] tiddlers (each outline node is a tiddler, and they are available via the `get-stream-nodes[]` filter, use `exclusive` suffix to exclude the root node.), and do a quick pre-filter with `[<currentTiddler>has[stream-type]]` to avoid performing time-consuming filter node filters on every open non-outline node tiddler.

When you use it, remember to modify `Index` to the name of the tiddler you care about.

```tid
tags: $:/tags/ViewTemplate
list-before: $:/core/ui/ViewTemplate/body
title: your-breadcrumbs-view-template

<%if [<currentTiddler>has[stream-type]] +[[Index]get-stream-nodes:exclusive[]title<currentTiddler>] %>
  <<stream-show-breadcrumbs>>
<%endif%>
```

!! Troubleshooting

!!! Misaligned context menu/right slide menu

* Try to remove scrolling from one of the upper containers.
** e.g. remove the `height: 100vh;` restriction or remove the `overflow-y: auto;` attribute
** Or make container a offsetParent of the context menu, e.g. by adding `position: absolute;top: 0;left: 0;`
* This is because the context menu is positioned relative to [[`offsetParent` of |https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent]], which is typically `document.body`, and if the parent container has If the parent container has scrolling, you will find that no matter how you scroll, the menu is in a fixed position relative to the page, and then the positioning will be wrong relative to the scrolled content.
** The principle is that `$eventcatcher` listens on `.stream-row` → provides `<<tv-popup-abs-coords>>` to `$action-popup` to compute the coordinates to put into `<<contextmenu-state>>` → `$reveal` with `<<contextmenu-state>>` to position the context menu relative to `<body>`.
