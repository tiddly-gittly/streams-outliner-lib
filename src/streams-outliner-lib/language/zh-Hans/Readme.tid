title: $:/plugins/linonetwo/streams-outliner-lib/language/zh-Hans/Readme

\procedure lingo-base() $:/plugins/linonetwo/streams-outliner-lib/language/
\procedure wikitext-example-without-html(src)
<div class="doc-example">
	<$macrocall $name="copy-to-clipboard-above-right" src=<<src>>/>
	<$codeblock code=<<src>>/>
	<p>
		将展示为：
	</p>
	<$transclude $variable="src" $mode="block"/>
</div>
\end

! <<lingo Name>>

<<lingo Description>>

阅读 [ext[https://tiddly-gittly.github.io/streams-outliner-lib/]] 上的互动文档。

!! 大纲使用方法

创建一个大纲，将信息添加到条目 [[Index]] 的字段里：

<<wikitext-example-without-html """<<stream-outliner Index>>""">>

或使用嵌入微件：

<<wikitext-example-without-html """<$transclude $variable="stream-outliner" currentTiddler="Index"/>""">>

!!! 带面包屑导航

这里我们改用 `stream-outliner-breadcrumbs` 宏，它自带面包屑导航（详见下面的其它工具里的面包屑导航）。而且我们添加了一个 `id` 参数，这样我们可以在同一个页面上创建多个大纲，你可能已经注意到了，如果不指定 `id` 参数，多个大纲会互相影响、同时展示相同的内容。

<<wikitext-example-without-html """<<stream-outliner-breadcrumbs Index1 id:stream-outliner-1>>""">>

!!! 节点编辑时带有工具栏

<<wikitext-example-without-html """<<stream-outliner Index2 enableEditToolbar:yes id:stream-outliner-2>>""">>

!!! 节点最大宽度

你可以使用任何 CSS 值，比如 `80vw` `80%` `80px` `80em` `80rem` `80ch` `80ex` `80mm` `80cm` `80in` `80pt` `80pc`，反正一定记得带单位。

<<wikitext-example-without-html """<<stream-outliner Index3 nodeMaxWidth:80% id:stream-outliner-3>>""">>

!!! 模板维基化节点标题

被维基化以生成新节点标题的维基文本。

默认是用斜杠 `/` 连接条目名和随机数，不过你可以自定义标题的拼接方式。

<<wikitext-example-without-html """<<stream-outliner Index4 newNodeTitle:"<<stream-root-title>>-<<now [UTC]YYYY0MM0DD0hh0mm0ssXXX>>" id:stream-outliner-4>>""">>

!!! 用来作为新的节点模板

这个条目将用作新节点的模板。您需要在这里填写一个现有的条目的标题。

这里我们使用条目 [[$:/plugins/linonetwo/streams-outliner-lib/language/zh-Hans/Name]] 作为例子。

注意它只有在第二个节点才开始生效（先随便创建一个节点，然后按回车来创建第二个节点看看）。

<<wikitext-example-without-html """<<stream-outliner Index5 newNodeTiddlerTemplate:"$:/plugins/linonetwo/streams-outliner-lib/language/zh-Hans/Name" id:stream-outliner-5>>""">>

!! 其它工具

!!! 面包屑导航

<<wikitext-example-without-html """<<stream-show-breadcrumbs>>""">>

直接使用它可能没什么作用，一般是把它加到一个条目查看模板上使用，例如下面这个条目。

你可以修改 `tags[XXX]` 这部分来精确匹配你的插件提供的条目。在这里保持精确可以避免你的条目查看模板在其他人的插件的条目上产生影响，其他人可能不希望展示面包屑导航。

```tid
tags: $:/tags/ViewTemplate
list-before: $:/core/ui/ViewTemplate/body
title: your-breadcrumbs-view-template

<%if [<currentTiddler>has[stream-type]tags[XXX]] %>
  <<stream-show-breadcrumbs>>
<%endif%>
```

或只在[[Index]] 条目里的大纲节点条目上展示面包屑导航（每个大纲节点都是一个条目，通过 `get-stream-nodes[]` 筛选器可以获取到它们），并使用 `[<currentTiddler>has[stream-type]]` 来做一个快速的预筛选，以免在每个打开的非大纲节点条目上都要执行费时的筛选器节点筛选器。

你在使用时，记得修改 `Index` 为你关心的条目名。

```tid
tags: $:/tags/ViewTemplate
list-before: $:/core/ui/ViewTemplate/body
title: your-breadcrumbs-view-template

<%if [<currentTiddler>has[stream-type]] +[[Index]get-stream-nodes[]title<currentTiddler>] %>
  <<stream-show-breadcrumbs>>
<%endif%>
```
